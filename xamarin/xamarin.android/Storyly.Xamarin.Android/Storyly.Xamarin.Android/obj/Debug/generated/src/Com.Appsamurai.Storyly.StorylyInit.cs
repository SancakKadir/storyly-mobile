//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Appsamurai.Storyly {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']"
	[global::Android.Runtime.Register ("com/appsamurai/storyly/StorylyInit", DoNotGenerateAcw=true)]
	public sealed partial class StorylyInit : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/appsamurai/storyly/StorylyInit", typeof (StorylyInit));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal StorylyInit (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']/constructor[@name='StorylyInit' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.appsamurai.storyly.config.StorylyConfig']]"
		[Register (".ctor", "(Ljava/lang/String;Lcom/appsamurai/storyly/config/StorylyConfig;)V", "")]
		public unsafe StorylyInit (string storylyId, global::Com.Appsamurai.Storyly.Config.StorylyConfig config) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Lcom/appsamurai/storyly/config/StorylyConfig;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_storylyId = JNIEnv.NewString ((string)storylyId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_storylyId);
				__args [1] = new JniArgumentValue ((config == null) ? IntPtr.Zero : ((global::Java.Lang.Object) config).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_storylyId);
				global::System.GC.KeepAlive (config);
			}
		}

		public unsafe global::Com.Appsamurai.Storyly.Config.StorylyConfig Config {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']/method[@name='getConfig' and count(parameter)=0]"
			[Register ("getConfig", "()Lcom/appsamurai/storyly/config/StorylyConfig;", "")]
			get {
				const string __id = "getConfig.()Lcom/appsamurai/storyly/config/StorylyConfig;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyConfig> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe string StorylyId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']/method[@name='getStorylyId' and count(parameter)=0]"
			[Register ("getStorylyId", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getStorylyId.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']/method[@name='component1' and count(parameter)=0]"
		[Register ("component1", "()Ljava/lang/String;", "")]
		public unsafe string Component1 ()
		{
			const string __id = "component1.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']/method[@name='component2' and count(parameter)=0]"
		[Register ("component2", "()Lcom/appsamurai/storyly/config/StorylyConfig;", "")]
		public unsafe global::Com.Appsamurai.Storyly.Config.StorylyConfig Component2 ()
		{
			const string __id = "component2.()Lcom/appsamurai/storyly/config/StorylyConfig;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyConfig> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly']/class[@name='StorylyInit']/method[@name='copy' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.appsamurai.storyly.config.StorylyConfig']]"
		[Register ("copy", "(Ljava/lang/String;Lcom/appsamurai/storyly/config/StorylyConfig;)Lcom/appsamurai/storyly/StorylyInit;", "")]
		public unsafe global::Com.Appsamurai.Storyly.StorylyInit Copy (string storylyId, global::Com.Appsamurai.Storyly.Config.StorylyConfig config)
		{
			const string __id = "copy.(Ljava/lang/String;Lcom/appsamurai/storyly/config/StorylyConfig;)Lcom/appsamurai/storyly/StorylyInit;";
			IntPtr native_storylyId = JNIEnv.NewString ((string)storylyId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_storylyId);
				__args [1] = new JniArgumentValue ((config == null) ? IntPtr.Zero : ((global::Java.Lang.Object) config).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.StorylyInit> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_storylyId);
				global::System.GC.KeepAlive (config);
			}
		}

	}
}
