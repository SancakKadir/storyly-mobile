//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Appsamurai.Storyly.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig']"
	[global::Android.Runtime.Register ("com/appsamurai/storyly/config/StorylyProductConfig", DoNotGenerateAcw=true)]
	public sealed partial class StorylyProductConfig : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']"
		[global::Android.Runtime.Register ("com/appsamurai/storyly/config/StorylyProductConfig$Builder", DoNotGenerateAcw=true)]
		public sealed partial class Builder : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/appsamurai/storyly/config/StorylyProductConfig$Builder", typeof (Builder));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Builder (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']/constructor[@name='StorylyProductConfig.Builder' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe Builder () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']/method[@name='build' and count(parameter)=0]"
			[Register ("build", "()Lcom/appsamurai/storyly/config/StorylyProductConfig;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.StorylyProductConfig Build ()
			{
				const string __id = "build.()Lcom/appsamurai/storyly/config/StorylyProductConfig;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyProductConfig> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']/method[@name='setCartAvailability' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setCartAvailability", "(Z)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder SetCartAvailability (bool isEnabled)
			{
				const string __id = "setCartAvailability.(Z)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (isEnabled);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']/method[@name='setFallbackAvailability' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setFallbackAvailability", "(Z)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder SetFallbackAvailability (bool isEnabled)
			{
				const string __id = "setFallbackAvailability.(Z)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (isEnabled);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']/method[@name='setPriceFormatter' and count(parameter)=1 and parameter[1][@type='com.appsamurai.storyly.util.formatter.StoryPriceFormatter']]"
			[Register ("setPriceFormatter", "(Lcom/appsamurai/storyly/util/formatter/StoryPriceFormatter;)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder SetPriceFormatter (global::Com.Appsamurai.Storyly.Util.Formatter.StoryPriceFormatter formatter)
			{
				const string __id = "setPriceFormatter.(Lcom/appsamurai/storyly/util/formatter/StoryPriceFormatter;)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formatter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formatter).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (formatter);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig.Builder']/method[@name='setProductFeed' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, ? extends java.util.List&lt;com.appsamurai.storyly.data.managers.product.STRProductItem&gt;&gt;']]"
			[Register ("setProductFeed", "(Ljava/util/Map;)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder SetProductFeed (global::System.Collections.Generic.IDictionary<string, global::System.Collections.Generic.IList<global::Com.Appsamurai.Storyly.Data.Managers.Product.STRProductItem>> feed)
			{
				const string __id = "setProductFeed.(Ljava/util/Map;)Lcom/appsamurai/storyly/config/StorylyProductConfig$Builder;";
				IntPtr native_feed = global::Android.Runtime.JavaDictionary<string, global::System.Collections.Generic.IList<global::Com.Appsamurai.Storyly.Data.Managers.Product.STRProductItem>>.ToLocalJniHandle (feed);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_feed);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyProductConfig.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_feed);
					global::System.GC.KeepAlive (feed);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/appsamurai/storyly/config/StorylyProductConfig", typeof (StorylyProductConfig));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal StorylyProductConfig (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config']/class[@name='StorylyProductConfig']/method[@name='copy' and count(parameter)=4 and parameter[1][@type='com.appsamurai.storyly.util.formatter.StoryPriceFormatter'] and parameter[2][@type='boolean'] and parameter[3][@type='boolean'] and parameter[4][@type='java.util.Map&lt;java.lang.String, ? extends java.util.List&lt;com.appsamurai.storyly.data.managers.product.STRProductItem&gt;&gt;']]"
		[Register ("copy", "(Lcom/appsamurai/storyly/util/formatter/StoryPriceFormatter;ZZLjava/util/Map;)Lcom/appsamurai/storyly/config/StorylyProductConfig;", "")]
		public unsafe global::Com.Appsamurai.Storyly.Config.StorylyProductConfig Copy (global::Com.Appsamurai.Storyly.Util.Formatter.StoryPriceFormatter priceFormatter, bool isFallbackEnabled, bool isCartEnabled, global::System.Collections.Generic.IDictionary<string, global::System.Collections.Generic.IList<global::Com.Appsamurai.Storyly.Data.Managers.Product.STRProductItem>> feed)
		{
			const string __id = "copy.(Lcom/appsamurai/storyly/util/formatter/StoryPriceFormatter;ZZLjava/util/Map;)Lcom/appsamurai/storyly/config/StorylyProductConfig;";
			IntPtr native_feed = global::Android.Runtime.JavaDictionary<string, global::System.Collections.Generic.IList<global::Com.Appsamurai.Storyly.Data.Managers.Product.STRProductItem>>.ToLocalJniHandle (feed);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((priceFormatter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) priceFormatter).Handle);
				__args [1] = new JniArgumentValue (isFallbackEnabled);
				__args [2] = new JniArgumentValue (isCartEnabled);
				__args [3] = new JniArgumentValue (native_feed);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.StorylyProductConfig> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_feed);
				global::System.GC.KeepAlive (priceFormatter);
				global::System.GC.KeepAlive (feed);
			}
		}

	}
}
