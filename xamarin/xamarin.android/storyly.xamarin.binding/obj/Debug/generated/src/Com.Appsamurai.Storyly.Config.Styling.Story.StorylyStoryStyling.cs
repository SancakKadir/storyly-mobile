//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Appsamurai.Storyly.Config.Styling.Story {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling']"
	[global::Android.Runtime.Register ("com/appsamurai/storyly/config/styling/story/StorylyStoryStyling", DoNotGenerateAcw=true)]
	public sealed partial class StorylyStoryStyling : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']"
		[global::Android.Runtime.Register ("com/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder", DoNotGenerateAcw=true)]
		public sealed partial class Builder : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder", typeof (Builder));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Builder (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/constructor[@name='StorylyStoryStyling.Builder' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe Builder () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='build' and count(parameter)=0]"
			[Register ("build", "()Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling Build ()
			{
				const string __id = "build.()Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setCloseButtonIcon' and count(parameter)=1 and parameter[1][@type='android.graphics.drawable.Drawable']]"
			[Register ("setCloseButtonIcon", "(Landroid/graphics/drawable/Drawable;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetCloseButtonIcon (global::Android.Graphics.Drawables.Drawable icon)
			{
				const string __id = "setCloseButtonIcon.(Landroid/graphics/drawable/Drawable;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((icon == null) ? IntPtr.Zero : ((global::Java.Lang.Object) icon).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (icon);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setCloseButtonVisibility' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setCloseButtonVisibility", "(Z)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetCloseButtonVisibility (bool isVisible)
			{
				const string __id = "setCloseButtonVisibility.(Z)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (isVisible);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setHeaderIconBorderColor' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.Integer&gt;']]"
			[Register ("setHeaderIconBorderColor", "(Ljava/util/List;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetHeaderIconBorderColor (global::System.Collections.Generic.IList<global::Java.Lang.Integer> colors)
			{
				const string __id = "setHeaderIconBorderColor.(Ljava/util/List;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				IntPtr native_colors = global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (colors);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_colors);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_colors);
					global::System.GC.KeepAlive (colors);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setHeaderIconVisibility' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setHeaderIconVisibility", "(Z)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetHeaderIconVisibility (bool isVisible)
			{
				const string __id = "setHeaderIconVisibility.(Z)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (isVisible);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setInteractiveTypeface' and count(parameter)=1 and parameter[1][@type='android.graphics.Typeface']]"
			[Register ("setInteractiveTypeface", "(Landroid/graphics/Typeface;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetInteractiveTypeface (global::Android.Graphics.Typeface typeface)
			{
				const string __id = "setInteractiveTypeface.(Landroid/graphics/Typeface;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((typeface == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeface).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (typeface);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setProgressBarColor' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.Integer&gt;']]"
			[Register ("setProgressBarColor", "(Ljava/util/List;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetProgressBarColor (global::System.Collections.Generic.IList<global::Java.Lang.Integer> colors)
			{
				const string __id = "setProgressBarColor.(Ljava/util/List;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				IntPtr native_colors = global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (colors);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_colors);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_colors);
					global::System.GC.KeepAlive (colors);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setShareButtonIcon' and count(parameter)=1 and parameter[1][@type='android.graphics.drawable.Drawable']]"
			[Register ("setShareButtonIcon", "(Landroid/graphics/drawable/Drawable;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetShareButtonIcon (global::Android.Graphics.Drawables.Drawable icon)
			{
				const string __id = "setShareButtonIcon.(Landroid/graphics/drawable/Drawable;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((icon == null) ? IntPtr.Zero : ((global::Java.Lang.Object) icon).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (icon);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setTitleColor' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setTitleColor", "(I)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetTitleColor (int color)
			{
				const string __id = "setTitleColor.(I)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (color);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setTitleTypeface' and count(parameter)=1 and parameter[1][@type='android.graphics.Typeface']]"
			[Register ("setTitleTypeface", "(Landroid/graphics/Typeface;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetTitleTypeface (global::Android.Graphics.Typeface typeface)
			{
				const string __id = "setTitleTypeface.(Landroid/graphics/Typeface;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((typeface == null) ? IntPtr.Zero : ((global::Java.Lang.Object) typeface).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (typeface);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling.Builder']/method[@name='setTitleVisibility' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setTitleVisibility", "(Z)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;", "")]
			public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder SetTitleVisibility (bool isVisible)
			{
				const string __id = "setTitleVisibility.(Z)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (isVisible);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/appsamurai/storyly/config/styling/story/StorylyStoryStyling", typeof (StorylyStoryStyling));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal StorylyStoryStyling (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.appsamurai.storyly.config.styling.story']/class[@name='StorylyStoryStyling']/method[@name='copy' and count(parameter)=10 and parameter[1][@type='java.util.List&lt;java.lang.Integer&gt;'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Typeface'] and parameter[4][@type='android.graphics.Typeface'] and parameter[5][@type='java.util.List&lt;java.lang.Integer&gt;'] and parameter[6][@type='boolean'] and parameter[7][@type='boolean'] and parameter[8][@type='boolean'] and parameter[9][@type='android.graphics.drawable.Drawable'] and parameter[10][@type='android.graphics.drawable.Drawable']]"
		[Register ("copy", "(Ljava/util/List;ILandroid/graphics/Typeface;Landroid/graphics/Typeface;Ljava/util/List;ZZZLandroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling;", "")]
		public unsafe global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling Copy (global::System.Collections.Generic.IList<global::Java.Lang.Integer> headerIconBorderColor, int titleColor, global::Android.Graphics.Typeface titleTypeface, global::Android.Graphics.Typeface _interactiveTypeface, global::System.Collections.Generic.IList<global::Java.Lang.Integer> progressBarColor, bool isTitleVisible, bool isHeaderIconVisible, bool isCloseButtonVisible, global::Android.Graphics.Drawables.Drawable closeButtonIcon, global::Android.Graphics.Drawables.Drawable shareButtonIcon)
		{
			const string __id = "copy.(Ljava/util/List;ILandroid/graphics/Typeface;Landroid/graphics/Typeface;Ljava/util/List;ZZZLandroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)Lcom/appsamurai/storyly/config/styling/story/StorylyStoryStyling;";
			IntPtr native_headerIconBorderColor = global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (headerIconBorderColor);
			IntPtr native_progressBarColor = global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (progressBarColor);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (native_headerIconBorderColor);
				__args [1] = new JniArgumentValue (titleColor);
				__args [2] = new JniArgumentValue ((titleTypeface == null) ? IntPtr.Zero : ((global::Java.Lang.Object) titleTypeface).Handle);
				__args [3] = new JniArgumentValue ((_interactiveTypeface == null) ? IntPtr.Zero : ((global::Java.Lang.Object) _interactiveTypeface).Handle);
				__args [4] = new JniArgumentValue (native_progressBarColor);
				__args [5] = new JniArgumentValue (isTitleVisible);
				__args [6] = new JniArgumentValue (isHeaderIconVisible);
				__args [7] = new JniArgumentValue (isCloseButtonVisible);
				__args [8] = new JniArgumentValue ((closeButtonIcon == null) ? IntPtr.Zero : ((global::Java.Lang.Object) closeButtonIcon).Handle);
				__args [9] = new JniArgumentValue ((shareButtonIcon == null) ? IntPtr.Zero : ((global::Java.Lang.Object) shareButtonIcon).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Appsamurai.Storyly.Config.Styling.Story.StorylyStoryStyling> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_headerIconBorderColor);
				JNIEnv.DeleteLocalRef (native_progressBarColor);
				global::System.GC.KeepAlive (headerIconBorderColor);
				global::System.GC.KeepAlive (titleTypeface);
				global::System.GC.KeepAlive (_interactiveTypeface);
				global::System.GC.KeepAlive (progressBarColor);
				global::System.GC.KeepAlive (closeButtonIcon);
				global::System.GC.KeepAlive (shareButtonIcon);
			}
		}

	}
}
